swagger: "2.0"
info:
  description: "聊天系统APi文档, 正常返回在json中不会有status_code, 错误会附带错误信息。获得token后，放入url中，例http://api.dev?token=eyddf。在本文档中，填入右上角的Authorize按钮里，就可以直接在本文档中测试api。"
  version: "1.0.0"
  title: "iChat"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "943643887@qq.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "139.199.175.91"
basePath: "/ichat/public/api"
paths:
  /user/register:
    post:
      deprecated: true
      tags:
        - 用户验证
      summary: 用户注册
      description: 填写用户名、邮箱、密码注册
      security: []
      parameters:
        - name: regist_info
          in: body
          description: 用户名、邮箱、密码
          schema:
            required:
              - name
              - email
              - password
            properties:
              name:
                type: string
              email:
                type: string
              password:
                type: string
      responses:
        200:
          $ref: '#/responses/Auth200Response'
        500:
          $ref: '#/responses/Standard500Response'
  /user/login:
    post:
      deprecated: true
      tags:
        - 用户验证
      summary: 登陆
      security: []
      parameters:
        - name: auth_info
          in: body
          schema:
            required:
              - email
              - password
            properties:
              email:
                type: string
              password:
                type: string
      responses:
        200:
          $ref: '#/responses/Auth200Response'
        401:
          $ref: '#/responses/Standard401Response'
        500:
          $ref: '#/responses/Standard500Response'
  /user:
    get:
      tags:
        - 辅助API
      summary: 获取全部用户，方便找id号
      security: []
      responses:
        200:
          description: 用户数组
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
  /profile/me:
    get:
        tags:
         - 资料
        summary: 获取自己的资料
        description: 更多的资料还未完成
        responses:
          200:
            description: 返回用户信息
            schema:
              $ref: '#/definitions/User'
          401:
            $ref: '#/responses/Standard401Response'
  /friend_requesting:
    post:
      tags:
        - 好友请求
      summary: 创建好友请求 **要求有分组id**
      description: 发送好友请求，之后会通过socket发送给对方。 测试：注册个账号，获得id号，将token填入本文档右上角的Authorize按钮中；打开http://139.199.175.91/ichat/public 登陆这个账号；回到本文档，点击try it out 按钮， 将to的值改为获得的id号，点击excute执行
      parameters:
        - name: friend_questing
          in: body
          schema:
            required:
              - to
              - tag_id
            properties:
              to:
                description: 对方用户id
                type: integer
              tag_id:
                description: 分组id
                type: integer
      responses:
        200:
          description: 好友请求发送成功
          schema:
            properties:
              message:
                description: 无用信息
                type: string
        401:
          $ref: '#/responses/Standard401Response'
  /friend_requesting/agree/{id}/tag/{tag_id}:
    get:
      tags:
        - 好友请求
      summary: 同意指定的好友请求 **要求有分组id**
      parameters:
        - name: id
          in: path
          description: 注意：这个id不是用户id，而是好友请求的编号
          required: true
          type: integer
        - name: tag_id
          in: path
          description: 分组id
          required: true
      responses:
        200:
          description: 好友请求同意
          schema:
           $ref: '#/responses/Standard200Response'
  /friend_requesting/ignore/{id}:
      get:
        tags:
          - 好友请求
        summary: 忽略指定的好友请求
        parameters:
          - name: id
            in: path
            description: 注意：这个id不是用户id，而是好友请求的编号
            required: true
            type: integer
        responses:
          200:
            description: 好友请求已忽略
            schema:
              $ref: '#/responses/Standard200Response'
          401:
              $ref: '#/responses/Standard401Response'
  /friend:
    get:
      tags:
       - 好友
      summary: 好友列表
      responses:
        200:
          description: 返回分组过的好友列表，现在有一个默认有个我的好友分组
          schema:
            $ref: '#/definitions/FriendList'
  /friend/{id}:
    get:
      tags:
        - 资料
      summary: 获取指定id用户的资料
      parameters:
        - name: id
          in: path
          required: true
          type: integer
      responses:
        200:
          description: 返回用户资料
          schema:
            $ref: '#/definitions/User'
        401:
          $ref: '#/responses/Standard401Response'
    delete:
      tags:
        - 好友
      summary: 删除好友
      parameters:
        - name: id
          in: path
          required: true
          type: integer
      responses:
        200:
          description: 删除好友成功
          schema:
            $ref: '#/responses/Standard200Response'

  /friend/search:
    post:
      tags:
        - 好友
      summary: 通过手机号或昵称搜索
      parameters:
        - name: keyword
          in: body
          schema:
            required:
              - keyword
            properties:
              keyword:
                type: string
      responses:
        200:
          description: 用户数组,再加上一个isFriend
          schema:
            type: array
            items:
              $ref: '#/definitions/User'


  /msg:
    post:
      tags:
        - 聊天
      summary: 发送消息 **新添消息类型,是否群消息**
      parameters:
        - name: message
          in: body
          schema:
            required:
              - to
              - msg
            properties:
              to:
                type: integer
                description: 接收方id
              content_type:
                type: integer
                description: 消息类型，默认纯文本 1：纯文本 2：图片 3：语音
              is_group_msg:
                type: boolean
                description: 是否群消息，默认否
              msg:
                type: string
                description: 消息
      responses:
          200:
            $ref: '#/responses/Standard200Response'
          401:
            $ref: '#/responses/Standard401Response'
  /file:
    post:
      tags:
        - 文件
      summary: 图片或语音上传
      parameters:
        - name: file
          in: formData
          type: file
          description: 要上传的文件
      responses:
        200:
          description: 上传成功
          schema:
            properties:
              url:
                type: string
                description: 文件url
  /tag:
    get:
      tags:
        - 分组
      summary: 全部分组
      responses:
        200:
          description: 分组数组(不带成员)
          schema:
            $ref: '#/definitions/Tags'
    post:
      tags:
        - 分组
      summary: 添加分组
      parameters:
        - in: body
          name: tag
          schema:
            required:
              - name
            properties:
              name:
                description: 分组名
                type: string
      responses:
        200:
          description: 添加的分组的信息
          schema:
            $ref: '#/definitions/Tags'
  /tag/{tag_id}:
    delete:
      tags:
        - 分组
      summary: 删除分组
      parameters:
        - name: tag_id
          in: path
          type: integer
      responses:
        200:
          description: 被删除的分组
          schema:
            $ref: '#/definitions/Tags'
    patch:
          tags:
            - 分组
          summary: 修改分组
          parameters:
            - name: tag_id
              in: path
              type: integer
            - in: body
              name: tag
              schema:
                required:
                  - name
                properties:
                  name:
                    description: 分组名
                    type: string
          responses:
            200:
              description: 添加的分组的信息
              schema:
                $ref: '#/definitions/Tags'
  /tag/put/{user_id}/to/{tag_id}:
    get:
      tags:
        - 分组
      summary: 为用户设置分组
      parameters:
        - in: path
          name: user_id
          description: 用户id
          type: integer
        - in: path
          name: tag_id
          description: 分组id
          type: integer
      responses:
        200:
          description: 设置成功
definitions:
  Auth:
    required:
      - token
      - user
    properties:
      token:
        type: string
      user:
        type: object
        properties:
          id:
            type: integer
          name:
            type: string
          email:
            type: string
  User:
    properties:
      id:
        type: integer
      name:
        type: string
      email:
        type: string
      avatar:
        type: string
      sex:
        type: string
      birthday:
        type: string
      area:
        type: string
      signature:
        type: string
  Error:
    properties:
      message:
        type: string
      status_code:
        type: integer
  Message:
      properties:
        message:
          type: string
  Tags:
    properties:
      id:
        type: integer
        description: 分组编号
      tags:
        type: string
        description: 分组名
      members:
        type: array
        items:
          $ref: '#/definitions/User'
  FriendList:
      type: array
      items:
        $ref: '#/definitions/Tags'
responses:
  Auth200Response:
    description: 返回用户信息和token，token用法见文档开头的说明
    schema:
      $ref: '#/definitions/Auth'
  Standard500Response:
    description: 因为我校验没写全，任何表单不规范都会引起该错误
    schema:
      $ref: '#/definitions/Error'
  Standard401Response:
    description: 无效的凭证
    schema:
      $ref: "#/definitions/Error"
  Standard200Response:
    description: 请求成功
    schema:
      $ref: '#/definitions/Message'
securityDefinitions:
  UserSecurity:
    type: apiKey
    in: query
    name: token
security:
  - UserSecurity: []